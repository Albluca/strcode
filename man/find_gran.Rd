% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sum_str.R
\name{find_gran}
\alias{find_gran}
\title{Find out granularity of a string vector}
\usage{
find_gran(direction = "down", highest = 3, lowest = 1, lines)
}
\arguments{
\item{direction}{either "up" or "down". Down means the algorithm starts with
the pattern containing a certain number of hashes (specified in
\code{highest}) and searches for a regex match. If it can't find one, it
reduces the number of hashes by one and searches again, until it finds a
pattern.}

\item{highest}{The highest level of granularity to search for.}

\item{lowest}{The lowest level of granularity to search for.}

\item{lines}{a character vector containing the lines to match against.}
}
\description{
This function takes a string (vector) as an input and searches for the
highest or lowest granularity. Granularity is defined in terms of a hash/
space sequence (see \code{\link{sum_str}}). The search is implemented using
a recursive approach.
}
\examples{
  strcode:::find_gran("down", highest = 3, lowest = 1, lines = c("##  .", "#   _"))
}

